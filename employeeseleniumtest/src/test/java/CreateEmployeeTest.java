// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.*;
import java.util.stream.Collectors;

public class CreateEmployeeTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    System.setProperty("webdriver.gecko.driver","D:\\geckodriver.exe");
    System.setProperty("webdriver.chrome.driver", "d:\\demo\\chromedriver.exe");

    //driver = new FirefoxDriver();
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void createEmployee() {
    var names = new BufferedReader(new InputStreamReader(CreateEmployeeTest.class.getResourceAsStream("/MOCK_DATA.csv"))).lines().collect(Collectors.toList());

    driver.get("http://localhost:8080/");
    driver.manage().window().setSize(new Dimension(1536, 824));
    for (var name: names) {
      driver.findElement(By.id("employee-name-input")).click();
      driver.findElement(By.id("employee-name-input")).sendKeys(name);
      driver.findElement(By.id("create-employee-button")).click();
    }
  }
}
